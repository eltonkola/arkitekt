apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

android {
  compileSdkVersion 27



  defaultConfig {
    minSdkVersion 15
    targetSdkVersion 27
    versionCode 1
    versionName "0.1.0"

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])

  implementation 'com.android.support:support-annotations:27.1.1'

  implementation 'com.android.support:appcompat-v7:27.1.1'
  implementation 'com.android.support.constraint:constraint-layout:1.1.2'
  implementation 'com.android.support:design:27.1.1'
  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'com.android.support.test:runner:1.0.2'
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

}


ext {
  core_group = "com.eltonkola"
  core_version = "0.1.0"
}

publishing {
  publications {
    library(MavenPublication) {
      artifact("$buildDir/outputs/aar/arkitekt_core-release.aar")
      groupId core_group
      artifactId 'arkitekt'
      version core_version

      //The publication doesn't know about our dependencies, so we have to manually add them to the pom
      pom.withXml {
        def dependenciesNode = asNode().appendNode('dependencies')

        //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
        configurations.compile.allDependencies.each {
          def dependencyNode = dependenciesNode.appendNode('dependency')
          dependencyNode.appendNode('groupId', it.group)
          dependencyNode.appendNode('artifactId', it.name)
          dependencyNode.appendNode('version', it.version)
        }
      }
    }
  }
}


Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
  user = properties.getProperty("bintray.user")
  key = properties.getProperty("bintray.apikey")
  configurations = ['archives']
  pkg {
    repo = 'maven'
    name = project.name
    userOrg = 'eltonkola'
    version core_version
    licenses = ['Apache-2.0']
    desc = 'Simple android lib for single activity apps'
    websiteUrl = "https://eltonkola.com"
    vcsUrl = 'https://github.com/eltonkola/arkitekt'
    publish = true
  }
  publications = ['library']
}

